version: "3.9"
name: api

x-php-base: &php-base
  image: app-backend:latest
  working_dir: /var/www/html
  env_file: [./backend/.env]
  volumes:
    - ./backend:/var/www/html
    - ./deploy/php/opcache.ini:/usr/local/etc/php/conf.d/zz-opcache.ini:ro
    - ./deploy/php/fpm.conf:/usr/local/etc/php-fpm.d/zz.conf:ro
  networks: [appnet]
  restart: unless-stopped
  logging:
    driver: json-file
    options: { max-size: "10m", max-file: "3" }

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: app-backend:latest
    container_name: backend
    environment:
        APP_ENV: "local"
        APP_DEBUG: "true"
        QUEUE_CONNECTION: redis
        CACHE_DRIVER: redis
        REDIS_CLIENT: phpredis
    <<: *php-base
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    security_opt: [no-new-privileges:true]
    expose: ["9000"]
    command: >
      sh -c "php -d memory_limit=1G artisan migrate --force --seed && php-fpm"
    healthcheck:
      test: ["CMD-SHELL", "php -v >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 6

  queue:
    container_name: queue
    command: php artisan queue:work --queue=sales,inventory --tries=5 --timeout=90 --sleep=1 --verbose
    <<: *php-base
    depends_on:
      backend: { condition: service_started }
      redis: { condition: service_healthy }

  scheduler:
    container_name: scheduler
    command: php artisan schedule:work
    <<: *php-base
    depends_on:
      backend: { condition: service_started }

  nginx:
    image: nginx:alpine
    container_name: web
    ports: ["8080:80"]
    volumes:
      - ./backend:/var/www/html:ro
      - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      backend: { condition: service_started }
    networks: [appnet]
    tmpfs: /var/cache/nginx
    restart: unless-stopped
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  db:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
    command:
      - "mysqld"
      - "--max_allowed_packet=64M"
      - "--innodb_buffer_pool_size=256M"
      - "--transaction-isolation=READ-COMMITTED"
    volumes:
      - db_data:/var/lib/mysql
    ports: ["3306:3306"]
    networks: [appnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -proot || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
      PMA_ARBITRARY: 0
      UPLOAD_LIMIT: 300M
    depends_on:
      db: { condition: service_healthy }
    ports: ["8081:80"]
    networks: [appnet]
    restart: unless-stopped
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--appendonly", "no"]
    ports: ["6379:6379"]
    networks: [appnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 6
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

networks:
  appnet:

volumes:
  db_data:
